-- MySQL Script generated by MySQL Workbench
-- Sat Apr 13 00:38:34 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema classicmodels
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema classicmodels
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `classicmodels` ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`UserData`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`UserData` (
  `userID` INT NOT NULL,
  `userName` LINESTRING NOT NULL,
  `password` LINESTRING NOT NULL,
  `profilePicturePath` LINESTRING NULL DEFAULT ./placeholderPic COMMENT 'Holds path to profile picture stored location\nDefault picture set as default',
  `lastLog` TIMESTAMP(1) NULL COMMENT 'create timestamp method to get timestamp at last log on by user',
  `userLATCoords` DECIMAL(8,6) NULL COMMENT 'Latitude to be used in Google Map API',
  `userLONGCoords` DECIMAL(9,6) NULL COMMENT 'Longitude to be used in Google Map API',
  PRIMARY KEY (`userID`),
  UNIQUE INDEX `idUserData_UNIQUE` (`userID` ASC) VISIBLE,
  UNIQUE INDEX `userName_UNIQUE` (`userName` ASC) VISIBLE,
  UNIQUE INDEX `password_UNIQUE` (`password` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProductLocal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProductLocal` (
  `productID` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `barcode` INT NOT NULL,
  `company` LINESTRING NOT NULL,
  `megaCorp` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `vegan` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `ethicalSourced` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `localSourced` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `allergens` LINESTRING NULL DEFAULT NULL,
  PRIMARY KEY (`productID`, `company`),
  UNIQUE INDEX `productID_UNIQUE` (`productID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProductSuperMarket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ProductSuperMarket` (
  `productID` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `barcode` INT NOT NULL,
  `company` LINESTRING NOT NULL,
  `megaCorp` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `vegan` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `ethicalSourced` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  `localSourced` TINYINT NULL DEFAULT NULL COMMENT 'NULL is unknown',
  PRIMARY KEY (`productID`, `company`),
  UNIQUE INDEX `productID_UNIQUE` (`productID` ASC) VISIBLE,
  INDEX `fk_ProductSuperMarket_ProductLocal1_idx` (`type` ASC) VISIBLE,
  CONSTRAINT `fk_ProductSuperMarket_ProductLocal1`
    FOREIGN KEY (`type`)
    REFERENCES `mydb`.`ProductLocal` (`type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CompanyData`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CompanyData` (
  `companyID` INT NOT NULL COMMENT 'company ID as shown for barcode',
  `companyName` LINESTRING NOT NULL COMMENT 'Associated to company or companyName',
  `logo` LINESTRING NULL DEFAULT ./placeholderPic COMMENT 'Holds path to picture stored location\nDefault picture set as default',
  `ownership` TINYINT NULL DEFAULT NULL COMMENT '1 = Mega\n0 = Local',
  `LATCoords` DECIMAL(8,6) NULL COMMENT 'Latitude to be used in Google Map API',
  `LONGCoords` DECIMAL(9,6) NULL COMMENT 'Longitude to be used in Google Map API',
  PRIMARY KEY (`companyID`, `companyName`),
  UNIQUE INDEX `idUserData_UNIQUE` (`companyID` ASC) VISIBLE,
  UNIQUE INDEX `userName_UNIQUE` (`companyName` ASC) VISIBLE,
  CONSTRAINT `fk_CompanyData_ProductSuperMarket1`
    FOREIGN KEY (`companyName`)
    REFERENCES `mydb`.`ProductSuperMarket` (`company`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CompanyData_ProductLocal1`
    FOREIGN KEY (`companyName`)
    REFERENCES `mydb`.`ProductLocal` (`company`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `classicmodels` ;

-- -----------------------------------------------------
-- Table `classicmodels`.`productlines`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`productlines` (
  `productLine` VARCHAR(50) NULL DEFAULT NULL,
  `textDescription` VARCHAR(4000) NULL DEFAULT NULL,
  `htmlDescription` MEDIUMTEXT NULL DEFAULT NULL,
  `image` MEDIUMBLOB NULL DEFAULT NULL,
  PRIMARY KEY (`productLine`));


-- -----------------------------------------------------
-- Table `classicmodels`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`products` (
  `productCode` VARCHAR(15) NULL DEFAULT NULL,
  `productName` VARCHAR(70) NOT NULL,
  `productLine` VARCHAR(50) NOT NULL,
  `productScale` VARCHAR(10) NOT NULL,
  `productVendor` VARCHAR(50) NOT NULL,
  `productDescription` TEXT NOT NULL,
  `quantityInStock` SMALLINT(6) NOT NULL,
  `buyPrice` DECIMAL(10,2) NOT NULL,
  `MSRP` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`productCode`),
  INDEX (`productLine` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`productLine`)
    REFERENCES `classicmodels`.`productlines` (`productLine`));


-- -----------------------------------------------------
-- Table `classicmodels`.`offices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`offices` (
  `officeCode` VARCHAR(10) NULL DEFAULT NULL,
  `city` VARCHAR(50) NOT NULL,
  `phone` VARCHAR(50) NOT NULL,
  `addressLine1` VARCHAR(50) NOT NULL,
  `addressLine2` VARCHAR(50) NULL DEFAULT NULL,
  `state` VARCHAR(50) NULL DEFAULT NULL,
  `country` VARCHAR(50) NOT NULL,
  `postalCode` VARCHAR(15) NOT NULL,
  `territory` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`officeCode`));


-- -----------------------------------------------------
-- Table `classicmodels`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`employees` (
  `employeeNumber` INT NULL DEFAULT NULL,
  `lastName` VARCHAR(50) NOT NULL,
  `firstName` VARCHAR(50) NOT NULL,
  `extension` VARCHAR(10) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `officeCode` VARCHAR(10) NOT NULL,
  `reportsTo` INT NULL DEFAULT NULL,
  `jobTitle` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`employeeNumber`),
  INDEX (`reportsTo` ASC) VISIBLE,
  INDEX (`officeCode` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`reportsTo`)
    REFERENCES `classicmodels`.`employees` (`employeeNumber`),
  CONSTRAINT ``
    FOREIGN KEY (`officeCode`)
    REFERENCES `classicmodels`.`offices` (`officeCode`));


-- -----------------------------------------------------
-- Table `classicmodels`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`customers` (
  `customerNumber` INT NULL DEFAULT NULL,
  `customerName` VARCHAR(50) NOT NULL,
  `contactLastName` VARCHAR(50) NOT NULL,
  `contactFirstName` VARCHAR(50) NOT NULL,
  `phone` VARCHAR(50) NOT NULL,
  `addressLine1` VARCHAR(50) NOT NULL,
  `addressLine2` VARCHAR(50) NULL DEFAULT NULL,
  `city` VARCHAR(50) NOT NULL,
  `state` VARCHAR(50) NULL DEFAULT NULL,
  `postalCode` VARCHAR(15) NULL DEFAULT NULL,
  `country` VARCHAR(50) NOT NULL,
  `salesRepEmployeeNumber` INT NULL DEFAULT NULL,
  `creditLimit` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`customerNumber`),
  INDEX (`salesRepEmployeeNumber` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`salesRepEmployeeNumber`)
    REFERENCES `classicmodels`.`employees` (`employeeNumber`));


-- -----------------------------------------------------
-- Table `classicmodels`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`payments` (
  `customerNumber` INT NULL DEFAULT NULL,
  `checkNumber` VARCHAR(50) NOT NULL,
  `paymentDate` DATE NOT NULL,
  `amount` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`customerNumber`, `checkNumber`),
  CONSTRAINT ``
    FOREIGN KEY (`customerNumber`)
    REFERENCES `classicmodels`.`customers` (`customerNumber`));


-- -----------------------------------------------------
-- Table `classicmodels`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`orders` (
  `orderNumber` INT NULL DEFAULT NULL,
  `orderDate` DATE NOT NULL,
  `requiredDate` DATE NOT NULL,
  `shippedDate` DATE NULL DEFAULT NULL,
  `status` VARCHAR(15) NOT NULL,
  `comments` TEXT NULL DEFAULT NULL,
  `customerNumber` INT NOT NULL,
  PRIMARY KEY (`orderNumber`),
  INDEX (`customerNumber` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`customerNumber`)
    REFERENCES `classicmodels`.`customers` (`customerNumber`));


-- -----------------------------------------------------
-- Table `classicmodels`.`orderdetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classicmodels`.`orderdetails` (
  `orderNumber` INT NULL DEFAULT NULL,
  `productCode` VARCHAR(15) NOT NULL,
  `quantityOrdered` INT NOT NULL,
  `priceEach` DECIMAL(10,2) NOT NULL,
  `orderLineNumber` SMALLINT(6) NOT NULL,
  PRIMARY KEY (`orderNumber`, `productCode`),
  INDEX (`productCode` ASC) VISIBLE,
  CONSTRAINT ``
    FOREIGN KEY (`orderNumber`)
    REFERENCES `classicmodels`.`orders` (`orderNumber`),
  CONSTRAINT ``
    FOREIGN KEY (`productCode`)
    REFERENCES `classicmodels`.`products` (`productCode`));

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`view1`;
USE `mydb`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
